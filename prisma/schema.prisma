generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  username      String         @unique
  email         String         @unique
  password      String
  active        Boolean        @default(true)
  bio           String         @default("")
  isBanned      Boolean        @default(false)
  isVerified    Boolean        @default(false)
  avatar        String         @default("default.jpg")
  online        Boolean        @default(false)
  notifications Notification[]
  posts         Post[]
  topics        Topic[]
  messages      Message[]
  createdAt     DateTime       @default(now())
  rank          Rank           @relation(fields: [rankId], references: [id])
  rankId        Int            @default(1)
  likes         Int            @default(0)
}

model Settings {
  id                 Int     @id @default(autoincrement())
  title              String
  slogan             String
  memberVerification Boolean @default(false)
}

model Category {
  id            Int      @id @default(autoincrement())
  order         Int      @default(1)
  name          String   @unique
  theme         String   @default("#000000")
  description   String?
  isVisible     Boolean  @default(false)
  adminsOnly    Boolean  @default(false)
  createdAt     DateTime @default(now())
  allowGuests   Boolean  @default(false)
  allowedGroups String   @default("[]")
  password      String   @default("")
  topics        Topic[]
}

model Topic {
  id         Int      @id @default(autoincrement())
  title      String   @unique
  labels     Json     @default("[]")
  views      Int      @default(0)
  posts      Post[]
  author     User     @relation(fields: [userId], references: [id])
  isLocked   Boolean  @default(false)
  createdAt  DateTime @default(now())
  userId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  isHidden  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quote     Int      @default(0)
  tags      String   @default("[]")
  author    User     @relation(fields: [userId], references: [id])
  likes     String   @default("[]")
  userId    Int
  Topic     Topic?   @relation(fields: [topicId], references: [id])
  topicId   Int?
}

model Notification {
  id         Int      @id @default(autoincrement())
  read       Boolean  @default(false)
  content    String
  refersTo   String   @default("")
  type       String   @default("default")
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  notifiedAt DateTime @default(now())
}

model Message {
  id        Int    @id @default(autoincrement())
  title     String
  content   String
  creator   Int
  recipient Int
  User      User?  @relation(fields: [userId], references: [id])
  userId    Int?
}

model Rank {
  id                Int     @id @default(autoincrement())
  name              String  @unique
  color             String  @unique @default("#5399e0")
  admin             Boolean @default(false)
  verify_users      Boolean @default(false)
  delete_users      Boolean @default(false)
  hide_posts        Boolean @default(false)
  delete_posts      Boolean @default(false)
  lock_posts        Boolean @default(false)
  lock_topics       Boolean @default(false)
  delete_topics     Boolean @default(false)
  hide_topics       Boolean @default(false)
  manage_categories Boolean @default(false)
  manage_roles      Boolean @default(false)
  ban_users         Boolean @default(false)
  restore_users     Boolean @default(false)
  access_dashboard  Boolean @default(false)
  manage_settings   Boolean @default(false)
  order             Int     @default(1)
  User              User[]
}

model Log {
  id   Int      @id @default(autoincrement())
  log  String
  date DateTime @default(now())
}

model Report {
  id         Int      @id @default(autoincrement())
  content    String
  reporterId Int
  reportedId Int
  date       DateTime @default(now())
}
